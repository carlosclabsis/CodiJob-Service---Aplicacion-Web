// <auto-generated />
using System;
using Infraestructure.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodiJobServices.Migrations.CodiJobDb
{
    [DbContext(typeof(CodiJobDbContext))]
    partial class CodiJobDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.TGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id");

                    b.Property<string>("GrupoFoto")
                        .HasColumnName("grupo_foto")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("GrupoNom")
                        .HasColumnName("grupo_nom")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("GrupoProm")
                        .HasColumnName("grupo_prom")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("t_grupo");
                });

            modelBuilder.Entity("Domain.TProyecto", b =>
                {
                    b.Property<Guid>("ProyId")
                        .HasColumnName("proy_id");

                    b.Property<string>("ProyDesc")
                        .HasColumnName("proy_desc")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ProyFecha")
                        .HasColumnName("proy_fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("ProyNom")
                        .HasColumnName("proy_nom")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProyUrl")
                        .HasColumnName("proy_url")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("RowVersion");

                    b.HasKey("ProyId");

                    b.ToTable("t_proyecto");
                });

            modelBuilder.Entity("Domain.TSkill", b =>
                {
                    b.Property<Guid>("SkillId")
                        .HasColumnName("skill_id");

                    b.Property<string>("SkillNom")
                        .HasColumnName("skill_nom")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("SkillId");

                    b.ToTable("t_skill");
                });

            modelBuilder.Entity("Domain.TUsuariogrupo", b =>
                {
                    b.Property<Guid>("UsugrupoId")
                        .HasColumnName("usugrupo_id");

                    b.Property<Guid>("GrupoId")
                        .HasColumnName("grupo_id");

                    b.Property<Guid>("UsuId")
                        .HasColumnName("usu_id");

                    b.HasKey("UsugrupoId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("UsuId");

                    b.ToTable("t_usuariogrupo");
                });

            modelBuilder.Entity("Domain.TUsuarioperfil", b =>
                {
                    b.Property<Guid>("UsuperId")
                        .HasColumnName("usuper_id");

                    b.Property<string>("UsuperBlog")
                        .HasColumnName("usuper_blog")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsuperDesc")
                        .HasColumnName("usuper_desc")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuperGit")
                        .HasColumnName("usuper_git")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UsuperWeb")
                        .HasColumnName("usuper_web")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UsuperId");

                    b.ToTable("t_usuarioperfil");
                });

            modelBuilder.Entity("Domain.TUsuarioproyecto", b =>
                {
                    b.Property<Guid>("UsuproId")
                        .HasColumnName("usupro_id");

                    b.Property<Guid>("ProyId")
                        .HasColumnName("proy_id");

                    b.Property<Guid>("UsuId")
                        .HasColumnName("usu_id");

                    b.HasKey("UsuproId");

                    b.HasIndex("ProyId");

                    b.HasIndex("UsuId");

                    b.ToTable("t_usuarioproyecto");
                });

            modelBuilder.Entity("Domain.TUsuskill", b =>
                {
                    b.Property<Guid>("UsuskillId")
                        .HasColumnName("ususkill_id");

                    b.Property<Guid>("SkillId")
                        .HasColumnName("skill_id");

                    b.Property<Guid>("UsuId")
                        .HasColumnName("usu_id");

                    b.Property<string>("UsuskillNivel")
                        .HasColumnName("ususkill_nivel")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("UsuskillVeri")
                        .HasColumnName("ususkill_veri");

                    b.HasKey("UsuskillId");

                    b.HasIndex("SkillId");

                    b.HasIndex("UsuId");

                    b.ToTable("t_ususkill");
                });

            modelBuilder.Entity("Domain.TUsuariogrupo", b =>
                {
                    b.HasOne("Domain.TGrupo", "Grupo")
                        .WithMany("TUsuariogrupo")
                        .HasForeignKey("GrupoId")
                        .HasConstraintName("FK_t_usuariogrupo_t_grupo");

                    b.HasOne("Domain.TUsuarioperfil", "Usu")
                        .WithMany("TUsuariogrupo")
                        .HasForeignKey("UsuId")
                        .HasConstraintName("FK_t_usuariogrupo_t_usuarioperfil");
                });

            modelBuilder.Entity("Domain.TUsuarioproyecto", b =>
                {
                    b.HasOne("Domain.TProyecto", "Proy")
                        .WithMany("TUsuarioproyecto")
                        .HasForeignKey("ProyId")
                        .HasConstraintName("FK_t_usuarioproyecto_t_proyecto");

                    b.HasOne("Domain.TUsuarioperfil", "Usu")
                        .WithMany("TUsuarioproyecto")
                        .HasForeignKey("UsuId")
                        .HasConstraintName("FK_t_usuarioproyecto_t_usuarioperfil");
                });

            modelBuilder.Entity("Domain.TUsuskill", b =>
                {
                    b.HasOne("Domain.TSkill", "Skill")
                        .WithMany("TUsuskill")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("FK_t_ususkill_t_skill");

                    b.HasOne("Domain.TUsuarioperfil", "Usu")
                        .WithMany("TUsuskill")
                        .HasForeignKey("UsuId")
                        .HasConstraintName("FK_t_ususkill_t_usuarioperfil");
                });
#pragma warning restore 612, 618
        }
    }
}
